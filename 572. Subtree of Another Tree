/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isIdentical(TreeNode* cur, TreeNode* subRoot){
        if(!cur || !subRoot){
            return !cur && !subRoot;
        }
        
        if(cur->val == subRoot->val){
            return isIdentical(cur->right, subRoot->right) && isIdentical(cur->left, subRoot->left);
        }
        return false;
    }
    
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(!root)   return false;
        
        if(isIdentical(root, subRoot)){
            return true;
        }
        else{
            return isSubtree(root->right, subRoot) || isSubtree(root->left, subRoot);
        }
    }
};
